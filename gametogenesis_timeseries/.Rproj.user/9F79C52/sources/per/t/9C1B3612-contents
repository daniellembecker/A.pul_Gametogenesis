---
title: "Multivariate analysis of gametogenesis physiological, reproductive, and environmental data"
author: "Ariana S Huffmyer, E5 RoL Team"
edited: "DM Becker"
date: "20240709"
output: 
  html_document:
    code_folding: hide
    toc: yes
    toc_depth: 6
    toc_float: yes
editor_options: 
  chunk_output_type: console
---

# Set Up    
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

```{r}
## install packages if you dont already have them
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("RColorBrewer")) install.packages("RColorBrewer")
if (!require("lme4")) install.packages("lme4")
if (!require("lmerTest")) install.packages("lmerTest")
if (!require("car")) install.packages("car")
if (!require("effects")) install.packages("effects")
if (!require("ggfortify")) install.packages("ggfortify")
if (!require("cowplot")) install.packages("cowplot")
if (!require("vegan")) install.packages("vegan")
if (!require("corrr")) install.packages("corrr")
if (!require("ggcorrplot")) install.packages("ggcorrplot")
if (!require("GGally")) install.packages("GGally")
if (!require("broom")) install.packages("broom")
if (!require("cowplot")) install.packages("cowplot")
# Install devtools if not already installed
if (!require("devtools")) install.packages("devtools")
# Load devtools
library(devtools)
# Install pairwiseAdonis from GitHub
devtools::install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
if (!require("corrplot")) install.packages("corrplot")
if (!require("dplyr")) install.packages("dplyr")

# load packages
library(tidyverse)
library(ggrepel)
library(plyr)
library(corrplot)
library(ggplot2)
library(RColorBrewer)
library(lme4)
library(lmerTest)
library(car)
library(effects)
library(ggfortify)
library(cowplot)
library(vegan)
library(dplyr)
library(corrr)
library(ggcorrplot)
library(GGally)
library(broom)
library(cowplot)
library(pairwiseAdonis)
```

# Load dataframe

Load in master dataframe generated from 1_assemble_data.Rmd.  
```{r}
master<-read.csv("gametogenesis_timeseries/gametogenesis_timeseries_analysis/Output/master_timeseries.csv")
```

# Rename columns for phys data
```{r}
phys_data <-master%>%
   dplyr::select(colony_id, timepoint, Host_AFDW.mg.cm2, Sym_AFDW.mg.cm2, Total_Chl_cm2, host_prot_mg.cm2, holobiont_prot_mg.cm2, cells.cm2, chla.ug.cm2, chlc2.ug.cm2)%>%
  filter(Host_AFDW.mg.cm2>0)%>%
  filter(Sym_AFDW.mg.cm2>0)%>%
  dplyr::rename(Host_Biomass=Host_AFDW.mg.cm2, Symbiont_Biomass=Sym_AFDW.mg.cm2, Symbiont_Density=cells.cm2, Host_Protein=host_prot_mg.cm2, Holobiont_Protein=holobiont_prot_mg.cm2, Total_Chlorophyll=Total_Chl_cm2, Chlorophylla = chla.ug.cm2, Chlorophyllc2 = chlc2.ug.cm2)

```

# Load in histological data
Select only colony_id, timepoint, Stage, geometric_mean, and gonad.type
```{r}
#load histo data
histo.data <- read.csv("histology/data/histological_data.csv")

#Select only colony_id, timepoint, Stage, geometric_mean, and gonad.type
repo_data <- histo.data%>%
   dplyr::select(colony_id, timepoint, Stage, geometric.mean, gonad.type) %>%
   na.omit

#rename gonad.type information
repo_data <- repo_data %>%
  mutate(gonad.type = case_when(
    gonad.type == "oocyte" ~ "oocyte_size",
    gonad.type == "spermatocyte" ~ "spermary_size",
    TRUE ~ gonad.type))  # This keeps any other values unchanged
  
# Transform data from long to wide format
# Pivot data from long to wide format
repo_wide_data <- repo_data %>%
  pivot_wider(names_from = gonad.type, values_from = geometric.mean)

# Function to unnest with filling NA values
unnest_with_na <- function(df, col) {
  max_length <- max(map_int(df[[col]], length))
  df %>%
    mutate(!!col := map(!!sym(col), ~ c(.x, rep(NA, max_length - length(.x))))) %>%
    unnest(!!sym(col))
}

# Transform data to long format
repo_transform_data <- repo_wide_data %>%
  mutate(timepoint = toupper(timepoint),  # Capitalize timepoint
    oocyte_size = map(oocyte_size, ~ if (is.null(.x)) NA_real_ else .x),
    spermary_size = map(spermary_size, ~ if (is.null(.x)) NA_real_ else .x)) %>%
  rowwise() %>%
  mutate(max_length = max(length(oocyte_size), length(spermary_size))) %>%
  ungroup() %>%
  mutate(
    oocyte_size = map2(oocyte_size, max_length, ~ c(.x, rep(NA, .y - length(.x)))),
    spermary_size = map2(spermary_size, max_length, ~ c(.x, rep(NA, .y - length(.x))))
  ) %>%
  select(-max_length) %>%
  unnest(c(oocyte_size, spermary_size)) %>%
  # Remove rows where both oocyte_size and spermary_size are NA
  filter(!is.na(oocyte_size) | !is.na(spermary_size))



```

# Load in light and temperature data
```{r}
light.dat <- read.csv("RAnalysis/output/environmental/mahana_light_data.csv")[, -1]

temp.dat <- read.csv("RAnalysis/output/environmental/20240129_mahana_temp_data.csv")[, -1]

# Separate date and time from the "date.temp" column
temp.dat.sep <- temp.dat %>%
  separate(date.time, into = c("Date", "Time"), sep = " ")

# remove logger column
temp.data <- temp.dat.sep %>%
  select(-logger.number)

light.data <- light.dat %>%
  select(-logger)

# left join into environmental data
environ.dat <- left_join(light.data, temp.data)

# Rename the 'calibrated' column to 'light'
environ.dat <- environ.dat %>%
  dplyr::rename(light = calibrated)

# create a timepoint column that corresponds to the month name from the Date column
environ.data <- environ.dat %>%
  mutate(
    Date = ymd(Date),  # Ensure Date is in proper date format
    timepoint = toupper(month(Date, label = TRUE, abbr = FALSE)))

# remove date and time, just have timepoint light and temp for cor plot
environ.filt <- environ.data %>%
  select(-Date, -Time)

```

# Combine environmental, reproductive, and physiological data frames by timepoint
```{r}
# combine reporductive data and phys_data
all.data <- full_join(repo_transform_data, phys_data)

# Aggregate the physiological and reproductive data
phys_repo_agg <- all.data %>%
  dplyr::group_by(timepoint) %>%
  summarise_if(is.numeric, ~mean(.x, na.rm = TRUE)) %>%
  ungroup()

# Merge the datasets
combined_data <- environ.data%>%
  full_join(phys_repo_agg, by = "timepoint")

```

