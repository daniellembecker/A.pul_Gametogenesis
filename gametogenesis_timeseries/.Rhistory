legend.title = element_text(size = 14, colour = "black", face = "bold")) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim = c(1000, 6000));light_summary_plot
light_summary_plot <- light.dat %>%
ggplot(aes(x = DateTime, y = calibrated)) +
geom_point(colour = "darkgray", size = 0.5, alpha = 0.05) +
geom_smooth(se = FALSE, colour = "black") +
ylab(expression("Light Intensity " * (mu*mol~m^{-2}~s^{-1}))) +
xlab("") + # This will set the x-axis label but you can remove this line if you want to remove the x-axis title
scale_x_datetime(date_breaks = "1 months", date_labels = "%b %Y") +
theme_classic() +
theme(text = element_text(size = 12, colour = "black"),
axis.title = element_text(size = 14, colour = "black", face = "bold"),
axis.text.x = element_blank(), # Hide x-axis text labels
legend.title = element_text(size = 14, colour = "black", face = "bold")) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim = c(1000, 6000));light_summary_plot
# Smoothed temperature plot across time
temp_summary_plot <- temp.dat %>%
ggplot(., aes(x=date.time, y= temp)) +
geom_point(colour="gray", size=0.5, alpha=0.05) +
geom_smooth(aes(), se=FALSE, method="gam", colour = "black") +
ylab("Temperature Â°C") +
xlab("") +
scale_x_datetime(date_breaks = "1 months", date_labels = "%b %Y")+
theme_classic() +
theme(
text=element_text(size=14, colour="black"),
axis.title=element_text(size=18, colour="black", face="bold"),
axis.text.x = element_blank(), # Hide x-axis text labels
legend.title=element_text(size=18, colour="black", face="bold")) +
ylim(25, 30);temp_summary_plot
# Combine the environmental plots (with no x-axis labels)
env_plots <- (temp_summary_plot | light_summary_plot) + plot_layout(ncol = 1)
library(patchwork)
# Combine the environmental plots (with no x-axis labels)
env_plots <- (temp_summary_plot | light_summary_plot) + plot_layout(ncol = 1)
# Combine the physiological plots (with x-axis labels only on the bottom plot)
phys_plots <- (symbplot_cm2 / sym_bio_cm2 / tot.chl / host_prot_cm2 / holobiont_prot_cm2 / host_bio_cm2) +
plot_layout(ncol = 1, guides = 'collect')
# Combine environmental and physiological plots
combined_plot <- env_plots / phys_plots + plot_layout(heights = c(1, 2))
combined_plot
# Combine the environmental plots (with no x-axis labels)
env_plots <- (temp_summary_plot / light_summary_plot) + plot_layout(ncol = 1)
env_plots
# Combine the physiological plots (with x-axis labels only on the bottom plot)
phys_plots <- (symbplot_cm2 / sym_bio_cm2 / tot.chl / host_prot_cm2 / holobiont_prot_cm2 / host_bio_cm2) +
plot_layout(ncol = 1, guides = 'collect')
phys_plots
# Combine environmental and physiological plots
combined_plot <- env_plots / phys_plots + plot_layout(heights = c(1, 2))
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=49, height=35, units="in")
# Customize physiological plots to remove x-axis labels and ticks except for the bottom plot
symbplot_cm2 <- symbplot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
sym_bio_cm2 <- sym_bio_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
tot.chl <- tot.chl + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
host_prot_cm2 <- host_prot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
holobiont_prot_cm2 <- holobiont_prot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
# Combine the environmental plots (with no x-axis labels)
env_plots <- (temp_summary_plot / light_summary_plot) + plot_layout(ncol = 1)
# Combine the physiological plots (with x-axis labels only on the bottom plot)
phys_plots <- (symbplot_cm2 / sym_bio_cm2 / tot.chl / host_prot_cm2 / holobiont_prot_cm2 / host_bio_cm2) +
plot_layout(ncol = 1, guides = 'collect')
# Combine environmental and physiological plots
combined_plot <- env_plots / phys_plots + plot_layout(heights = c(1, 2))
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=49, height=49, units="in")
# Check how many plots you are combining
n_plots <- length(env_plots) + length(phys_plots)  # Sum the number of plots
n_plots
# Adjust layout as needed, for instance, ensure enough rows/columns
combined_plot <- env_plots / phys_plots + plot_layout(nrow = n_plots, heights = c(1, 2))
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=49, height=49, units="in")
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=15, height=20, units="in")
# Leave the x-axis labels and ticks for the last plot (host_bio_cm2)
# No changes needed for host_bio_cm2 as it will display the x-axis
# Combine the physiological plots (with x-axis labels only on the bottom plot)
phys_plots <- (symbplot_cm2 / sym_bio_cm2 / tot.chl / host_prot_cm2 / holobiont_prot_cm2 / host_bio_cm2) +
plot_layout(ncol = 1, guides = 'collect')
# Combine environmental and physiological plots
combined_plot <- env_plots / phys_plots + plot_layout(heights = c(1, 2))
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=15, height=20, units="in")
# Combine plots with adjusted layout
combined_plot <- env_plots / phys_plots + plot_layout(ncol = 1, heights = c(1, 2))
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=15, height=20, units="in")
# Leave the x-axis labels and ticks for the last plot (host_bio_cm2)
# No changes needed for host_bio_cm2 as it will display the x-axis
# Combine the physiological plots (with x-axis labels only on the bottom plot)
combined_plot <- (temp_summary_plot / light_summary_plot / symbplot_cm2 / sym_bio_cm2 / tot.chl / host_prot_cm2 / holobiont_prot_cm2 / host_bio_cm2) +
plot_layout(ncol = 1, guides = 'collect')
# Save combined plot
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=15, height=20, units="in")
# Customize physiological plots to remove x-axis labels and ticks except for the bottom plot
symbplot_cm2 <- symbplot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
sym_bio_cm2 <- sym_bio_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()),
# Customize physiological plots to remove x-axis labels and ticks except for the bottom plot
symbplot_cm2 <- symbplot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
sym_bio_cm2 <- sym_bio_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()),
sym_bio_cm2 <- sym_bio_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()),
sym_bio_cm2 <- sym_bio_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
# Customize physiological plots to remove x-axis labels and ticks except for the bottom plot
symbplot_cm2 <- symbplot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
sym_bio_cm2 <- sym_bio_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
tot.chl <- tot.chl + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
host_prot_cm2 <- host_prot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
holobiont_prot_cm2 <- holobiont_prot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
# Combine the physiological and environmmental plots (with x-axis labels only on the bottom plot)
combined_plot <- (temp_summary_plot / light_summary_plot / symbplot_cm2 / sym_bio_cm2 / tot.chl / host_prot_cm2 / holobiont_prot_cm2 / host_bio_cm2) +
plot_layout(ncol = 1, guides = 'collect')
# Save combined plot
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=10, height=20, units="in")
# Customize environmental and physiological plots to remove x-axis labels and ticks except for the bottom plot
temp_summary_plot <- temp_summary_plot + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
light_summary_plot <- light_summary_plot + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
symbplot_cm2 <- symbplot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
sym_bio_cm2 <- sym_bio_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
tot.chl <- tot.chl + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
host_prot_cm2 <- host_prot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
holobiont_prot_cm2 <- holobiont_prot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
host_bio_cm2 <- host_bio_cm2 + theme(axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
# Combine the physiological and environmmental plots (with x-axis labels only on the bottom plot)
combined_plot <- (temp_summary_plot / light_summary_plot / symbplot_cm2 / sym_bio_cm2 / tot.chl / host_prot_cm2 / holobiont_prot_cm2 / host_bio_cm2) +
plot_layout(ncol = 1, guides = 'collect')
# Save combined plot
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=10, height=20, units="in")
# Customize environmental and physiological plots to remove x-axis labels and ticks except for the bottom plot
temp_summary_plot <- temp_summary_plot + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
light_summary_plot <- light_summary_plot + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
symbplot_cm2 <- symbplot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
sym_bio_cm2 <- sym_bio_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
tot.chl <- tot.chl + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
host_prot_cm2 <- host_prot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
holobiont_prot_cm2 <- holobiont_prot_cm2 + theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
host_bio_cm2 <- host_bio_cm2 + theme(axis.title=element_text(face="bold", size=18),
axis.text=element_text(size=18, color="black"))
# Combine the physiological and environmmental plots (with x-axis labels only on the bottom plot)
combined_plot <- (temp_summary_plot / light_summary_plot / symbplot_cm2 / sym_bio_cm2 / tot.chl / host_prot_cm2 / holobiont_prot_cm2 / host_bio_cm2) +
plot_layout(ncol = 1, guides = 'collect')
# Save combined plot
ggsave(filename="gametogenesis_timeseries_analysis/Figures/timeseries_stacked_plot.png", plot=combined_plot, dpi=300, width=10, height=20, units="in")
light_summary_plot <- light.dat %>%
ggplot(aes(x = DateTime, y = calibrated)) +
geom_point(colour = "darkgray", size = 0.5, alpha = 0.05) +
geom_smooth(se = FALSE, colour = "black") +
ylab(expression("Light Intensity " * (mu*mol~m^{-2}~s^{-1}))) +
xlab("") + # This will set the x-axis label but you can remove this line if you want to remove the x-axis title
scale_x_datetime(date_breaks = "1 months", date_labels = "%b %Y") +
theme_classic() +
theme(text=element_text(size=14, colour="black"),
axis.title=element_text(size=18, colour="black", face="bold"),
axis.text.x = element_blank(), # Hide x-axis text labels
legend.title=element_text(size=18, colour="black", face="bold")) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim = c(1000, 6000));light_summary_plot
# Smoothed temperature plot across time
temp_summary_plot <- temp.dat %>%
ggplot(., aes(x=date.time, y= temp)) +
geom_point(colour="gray", size=0.5, alpha=0.05) +
geom_smooth(aes(), se=FALSE, method="gam", colour = "black") +
ylab("Temperature Â°C") +
xlab("") +
scale_x_datetime(date_breaks = "1 months", date_labels = "%b %Y")+
theme_classic() +
theme(
text=element_text(size=14, colour="black"),
axis.title=element_text(size=18, colour="black", face="bold"),
axis.text.x = element_blank(), # Hide x-axis text labels
legend.title=element_text(size=18, colour="black", face="bold")) +
ylim(25, 30);temp_summary_plot
View(oogen_size)
View(oogen_abundance)
View(oogen_size)
View(oogen_abundance)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("gridExtra")
library("ghibli")
library("lme4")
library("car")
library("PNWColors")
library("lubridate")
library("lsmeans")
library("multcomp")
library("patchwork")
# Chunk 2
#load data files
abundance <- read.csv("histology/data/histological_data.csv", header = T, na.strings = c("", "NA"))
#load data files
abundance <- read.csv("../data/histological_data.csv", header = T, na.strings = c("", "NA"))
# Model with colony as a random effect
model_with_colony <- lmer(Host_AFDW.mg.cm2 ~ timepoint + (1|patch), data = master)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
# Chunk 2
## install packages if you dont already have them
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("RColorBrewer")) install.packages("RColorBrewer")
if (!require("lme4")) install.packages("lme4")
if (!require("lmerTest")) install.packages("lmerTest")
if (!require("car")) install.packages("car")
if (!require("effects")) install.packages("effects")
if (!require("ggfortify")) install.packages("ggfortify")
if (!require("cowplot")) install.packages("cowplot")
if (!require("vegan")) install.packages("vegan")
if (!require("corrr")) install.packages("corrr")
if (!require("ggcorrplot")) install.packages("ggcorrplot")
if (!require("GGally")) install.packages("GGally")
if (!require("broom")) install.packages("broom")
if (!require("cowplot")) install.packages("cowplot")
if (!require("lsmeans")) install.packages("lsmeans")
# load packages
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(lme4)
library(lmerTest)
library(car)
library(ggsignif)
library(effects)
library(ggfortify)
library(cowplot)
library(vegan)
library(corrr)
library(ggcorrplot)
library(GGally)
library(ggpubr)
library(broom)
library(multcomp)
library(multcompView)
library(cowplot)
library(datasets)
library(dplyr)
library(plyr)
library(grid)
library(gridExtra)
library(lsmeans)
# Chunk 3
master<-read.csv("gametogenesis_timeseries_analysis/Output/master_timeseries.csv")
# read in metadata to add patch to master timeseries
metadata <- read.csv("gametogenesis_timeseries_analysis/master_metadata.csv")
# add ACR- before each tag number
metadata <- metadata %>%
mutate(colony_id = paste0("ACR-", colony_id))
#commbine master and metadata
master <- left_join(master, metadata)
#rename AUG september and october
master[master=="AUGUST"] <- "AUG"
master[master=="SEPTEMBER"] <- "SEP"
master[master=="OCTOBER"] <- "OCT"
master[master=="MARCH"] <- "MAR"
master[master=="APRIL"] <- "APR"
master[master=="MAY"] <- "MAY"
master[master=="JUNE"] <- "JUN"
master[master=="JULY"] <- "JUL"
master[master=="AUGUST"] <- "AUG"
master[master=="JANUARY"] <- "JAN"
master[master=="FEBRUARY"] <- "FEB"
# Chunk 4
# Ensure timepoint is a factor
master$timepoint <- factor(master$timepoint, levels = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"))
# Fit a mixed-effects model with 'patch' as a random effect
model.sym <- lmer(cells.cm2 ~ timepoint + (1|patch), data = master)
qqPlot(residuals(model.sym))
# Residuals are not normally distributed. Attempt with log transformation.
sym_model<-lmer(log(cells.cm2)~timepoint+(1|patch), data=master)
qqPlot(residuals(sym_model))
# Identify the outliers
outliers <- c(355,94,194,364, 214, 48)
# remove outliers
data_clean_sym <- master[-outliers, ]
# Residuals are not normally distributed. Attempt with log transformation.
# Fit the model with January as the intercept
sym_model <- lmer(log(cells.cm2) ~ timepoint + (1 | patch), data = data_clean_sym)
# Check residuals for normality
qqPlot(residuals(sym_model))
# Get the summary of the model
summary(sym_model)
# Post-hoc pairwise comparisons
pairwise_results.sym <- emmeans(sym_model, pairwise ~ timepoint, adjust = "tukey")
# Generate letters for significant differences
timepoint_cld_sym <- cld(pairwise_results.sym, Letters = letters)
# Remove outlier data
outlier_value <- 2430445.8
filtered_sym <- master %>%
filter(round(cells.cm2, digits = 1) != round(outlier_value, digits = 1)) %>%
filter(!is.na(cells.cm2)) %>%
filter(!is.na(timepoint))
# Get the maximum value of cells.cm2
max_cells_cm2 <- max(filtered_sym$cells.cm2, na.rm = TRUE)
# Create the plot
symbplot_cm2 <- filtered_sym %>%
ggplot(aes(x = timepoint, y = cells.cm2, fill = timepoint)) +
geom_boxplot(color = "black", fill = "white", alpha = 0.2) +
geom_point(pch = 21, size = 2, position = position_jitterdodge(0.2)) +
# geom_text(data = timepoint_cld_sym, aes(label = .group, x = timepoint, y = 1 * max_cells_cm2),
#        vjust = -0.5, hjust = 0.5, size = 14, color = "black") + # Add the text annotations with centered alignment for each timepoint
# scale_x_discrete(limits = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT")) +
xlab("") +
ylab(expression(bold(paste("Symbiont Cells cm"^-2)))) +
theme_classic() +
theme(
legend.position = "none",
axis.title = element_text(face = "bold", size = 60),
axis.text = element_text(size = 40, color = "black"),
strip.text.x = element_text(face = "italic", size = 40));symbplot_cm2
# Chunk 5
# Fit a mixed-effects model with 'patch' as a random effect, check normality
model.chla <- lmer(chla.ug.cm2 ~ timepoint + (1|patch), data = master)
qqPlot(residuals(model.chla))
# Residuals are not normally distributed. Attempt with log transformation.
chla_model<-lmer(log(chla.ug.cm2)~timepoint+(1|patch), data=master)
qqPlot(residuals(chla_model))
# Identify the outliers
outliers <- c(94,308, 45, 346)
# remove outliers
data_clean_chla <- master[-outliers, ]
# Residuals are not normally distributed. Attempt with log transformation.
chla_model<-lmer(log(chla.ug.cm2)~timepoint+(1|patch), data=data_clean_chla)
qqPlot(residuals(chla_model))
# Get the summary of the model
summary(chla_model)
# Perform Type III ANOVA
anova_result <- Anova(chla_model, type = 3)
# Post-hoc pairwise comparisons
pairwise_results.chla <- emmeans(chla_model, pairwise ~ timepoint, adjust = "tukey")
# Generate letters for significant differences
timepoint_cld_chla <- cld(pairwise_results.chla, Letters = letters)
# Define a threshold for identifying outliers for the 'Value' column
threshold <- 10  # For example, we consider values greater than 50 as outliers
# Filter out values beyond the threshold for the 'Value' column
filtered_chla <- master[master$chla.ug.cm2 <= threshold, ]
# Get the maximum value of cells.cm2
max_chla <- max(master$chla.ug.cm2, na.rm = TRUE)  # Make sure to handle any missing values
# make chla plot
chla_cm2 <- filtered_chla %>%
filter(!is.na(chla.ug.cm2)) %>%
filter(!is.na(timepoint))%>%
dplyr::select(colony_id, timepoint, chla.ug.cm2)%>%
ggplot(., aes(x = timepoint, y = chla.ug.cm2, fill = timepoint)) +
geom_boxplot(color="black", fill="white", alpha=0.2) +
geom_point(pch = 21, size=2, position = position_jitterdodge(0.2)) +
ylim(0, 12)+
# geom_text(data = timepoint_cld_chla, aes(label = .group, x = timepoint, y = 1.0*max_chla), vjust = -0.5, size = 14, color = "black") +
scale_x_discrete(limits = c("JAN","FEB","MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT")) +
xlab("") +
ylab(expression(bold(paste("Chlorophyll a (", mu, "g cm"^-2, ")"))))+
theme_classic() +
scale_y_continuous(limits = c(0, 8))  + # Adjust limits as needed
theme(legend.position = "none",
axis.title=element_text(face="bold", size=60),
axis.text=element_text(size=40, color="black"),
strip.text.x=element_text(face="italic", size=40)); chla_cm2
# Chunk 6
# Fit a mixed-effects model with 'patch' as a random effect
model.chlc <- lmer(chlc2.ug.cm2 ~ timepoint + (1|patch), data = master)
qqPlot(residuals(chla_model))
# Get the summary of the model
summary(chlc_model)
# Model with colony as a random effect
model_with_colony <- lmer(Host_AFDW.mg.cm2 ~ timepoint + (1|patch), data = master)
# Model without colony as a random effect
model_without_colony <- lmer(Host_AFDW.mg.cm2 ~ timepoint + (1|colony_id), data = master)
# run commparisons for AIC and BIC values
AIC(model_with_colony, model_without_colony)
BIC(model_with_colony, model_without_colony)
# Check if patch or colony_id should be used as random effect, lower AIC with patch
# Model with colony as a random effect
model_with_colony <- lmer(cells.cm2 ~ timepoint + (1|patch), data = master)
# Model without colony as a random effect
model_without_colony <- lmer(cells.cm2 ~ timepoint + (1|colony_id), data = master)
# run commparisons for AIC and BIC values
AIC(model_with_colony, model_without_colony)
BIC(model_with_colony, model_without_colony)
View(oogen_abundance)
View(temp.dat)
# Convert date.time to POSIXct format
temp.dat$date.time <- as.POSIXct(temp.dat$date.time, format="%Y-%m-%d %H:%M", tz="UTC")
#filter to not show november
temp.dat <- temp.dat %>%
filter(month != "Nov")
# Smoothed temperature plot across time
temp_summary_plot <- temp.dat %>%
ggplot(., aes(x=date.time, y= temp)) +
geom_point(colour="gray", size=0.5, alpha=0.05) +
geom_smooth(aes(), se=FALSE, method="gam", colour = "black") +
ylab("Temperature Â°C") +
xlab("") +
scale_x_datetime(date_breaks = "1 months", date_labels = "%b %Y")+
theme_classic() +
theme(
text=element_text(size=14, colour="black"),
axis.title=element_text(size=18, colour="black", face="bold"),
axis.text.x = element_blank(), # Hide x-axis text labels
legend.title=element_text(size=18, colour="black", face="bold")) +
ylim(25, 30);temp_summary_plot
View(master)
# Generate letters for significant differences
timepoint_cld_sym <- cld(pairwise_results.sym, Letters = letters)
View(timepoint_cld_sym)
pairwise_results.sym
pairwise_results.tot
# Post-hoc pairwise comparisons
pairwise_results.sym.bio
# Post-hoc pairwise comparisons
pairwise_results.host.bio
